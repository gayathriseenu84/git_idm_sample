<?php

/**
 * Implementation of hook_menu().
 */
function idm_employees_menu() {
  $items = array ();

  $items['myworkers'] = array (
    'title' => 'My Workers',
    'page callback' => 'list_employees',
    'access arguments' => array('access idm profile'),
    'menu_name' => 'main-menu', // This is the changed line.
    'type' => MENU_NORMAL_ITEM,
    'weight' => - 50
  );

  $items['employeeslist'] = array (
    'title' => 'Employees',
    'page callback' => 'list_employeeslist',
    'page arguments' => array (1),
    'access arguments' => array('access idm profile'),
    'type' => MENU_CALLBACK,
  );

  $items['emplist'] = array (
    'page callback' => 'idm_employees_emplist',
    'page arguments' => array (1,2,3),
    'access arguments' => array('access idm profile'),
    'type' => MENU_CALLBACK,
  );

  $items['terminate-emp'] = array (
    'page callback' => 'idm_employees_terminate',
    'page arguments' => array (1),
    //'page arguments' => array (), //mohan change for bulk
    'access arguments' => array('access idm profile'),
    'type' => MENU_CALLBACK,
  );

  $items['download/%'] = array (
    'page callback' => 'idm_employees_download',
    'page arguments' => array (1),
    'access arguments' => array('access idm profile'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


function idm_employees_get_employee_search_field($userid){
    $variables['element']['#type'] = 'textfield';
    $variables['element']['#autocomplete_path'] = 'autocomplete/directreports';
    $variables['element']['#attributes']['id'] = 'employee-search';
    $variables['element']['#attributes']['userid'] = $userid;
    $variables['element']['#size'] = 60;
    $variables['element']['#theme'] = 'textfield';
    $variables['element']['#value'] = t('search workers');
    return theme_textfield($variables);
}

/**
 * Callback for employees
 */
function list_employees() {
  if(isset($_SESSION['legacy'])) {
    $external_url = variable_get('idm_waveset_myworkers_main_page_url','https://sso.stg.inbcu.com/nbcucentral/app/pwchange.jsp');
    drupal_goto($external_url, array('external' => TRUE));
  } else {
    drupal_add_js(drupal_get_path('module', 'idm_employees') . '/js/jquery.sticky.js');
    $content['info'] = array (
      '#type' => 'markup',
      '#markup' => get_employees(),
      '#prefix' => '<div id="mgr_employees">',
      '#suffix' => '</div>'
    );
    return $content;
  }
}

function list_employeeslist($userType) {
  $content['info'] = array (
    '#type' => 'markup',
    '#markup' => idm_employees_emplist($userType,'', ''),
    '#prefix' => '<div id="mgr_employees">',
    '#suffix' => '</div>'
  );
  return $content;
}

/**
 * Callback for getting employees.
 */
function get_employees() {
  global $user;
  $userid = empty($user->name) ? '' : $user->name;
  //$userid = '206426150';
  $employee_content = _idm_employee_get_employee();
  $var['employee_count'] = isset($employee_content['employee_count']) ? $employee_content['employee_count'] : 0;
  $var['contractor_count'] = isset($employee_content['contractor_count']) ? $employee_content['contractor_count'] : 0;
  $var['functional_count'] = isset($employee_content['functional_count']) ? $employee_content['functional_count'] : 0;
  $var['total_count'] = isset($employee_content['total_count']) ? $employee_content['total_count'] : 0;
  $employees_content = array_slice($employee_content, 4);
  $var['employee'] = $employees_content;
  if(isset($_GET['userType'])) {
    $var['filterby'] = $_GET['userType'];
  } else {
    $var['filterby'] = 'all';
  }
  $var['manager_lookup_field'] = idm_profile_get_manager_lookup_field($userid);
  $var['employee_search_field'] = idm_employees_get_employee_search_field($userid);
  return theme('employees', $var);
}

/**
 * Wrapper method for get the Employee details.
 *
 * @param String $userid,$userType
 */
function _idm_employee_get_employee() {
  global $user;
  //$userid = '221013362';
  $userid = empty($user->name) ? '' : $user->name;
  if(isset($_GET['userType'])) {
    $userType = $_GET['userType'];
  } else {
    $userType = 'all';
  }
  $sortBy = 'id';
  $sortOrder = 'ascending';
  $return = array();
  $url = variable_get('rest_api_check_url').'/internal/users';
  if ($userType == 'all') {
    if ($sortBy == ''){
      $filter = rawurlencode('manager.managerId eq '.$userid);
    }else {
      $sort_filter = '&sortBy='.$sortBy.'&sortOrder='.$sortOrder;
      $filter = rawurlencode('manager.managerId eq '.$userid).$sort_filter;
    }
  } else {
    if ($sortBy == '') {
      $filter = rawurlencode('manager.managerId eq '.$userid.' and userType eq '.$userType);
    } else {
      $sort_filter = '&sortBy='.$sortBy.'&sortOrder='.$sortOrder;
      $filter = rawurlencode('manager.managerId eq '.$userid.' and userType eq '.$userType).$sort_filter;
    }
  }
  $url_get = $url . '/?filter='.$filter;
  $result = _idm_portal_get_api_data($url_get);
  cache_clear_all('*', 'cache', TRUE);
  if(isset($result->data)) {
    $return = _idm_employee_format_employee_info(json_decode($result->data));
  }
  return $return;
}

function _idm_employee_format_employee_info($data) {
  $employeeinfo = array();
  if (isset($data->results)) {
    foreach($data->results as $key=>$value) {
      if ($value->userType == 'Employees') {
        $employeeinfo['employee_count'] = $value->custom_count;
      }
      if ($value->userType == 'Contractors') {
        $employeeinfo['contractor_count'] = $value->custom_count;
      }
	  if ($value->userType == 'Functional') {
        $employeeinfo['functional_count'] = $value->custom_count;
      }
      if(isset($employeeinfo['employee_count']) && isset($employeeinfo['contractor_count']) && isset($employeeinfo['functional_count'])){
        $employeeinfo['total_count'] = $employeeinfo['employee_count'] + $employeeinfo['contractor_count'] + $employeeinfo['functional_count'];
      }
    }
  }
  if (isset($data->Resources)) {
    foreach($data->Resources as $key=>$value) {
      if(!empty($value->id)){
        $employeeinfo[$key]['sso'] = $value->id;
      }
      $employeeinfo[$key]['name'] = idm_profile_format_display_name($value,false);
      if(!empty($value->emails)){
        foreach($value->emails as $email){
          if($email->type == 'alternate') {
            $employeeinfo[$key]['email'][$email->type] = $email->value;
		  }
        }
      }
      if (!empty($value->userType)) {
        if (!empty($value->title) && $value->userType == "Employee" ) {
           $employeeinfo[$key]['job_title'] = $value->title;
        } else if (!empty($value->custom_jobTitle) && ($value->userType == "Contractor" || $value->userType == "Functional")) {
           $employeeinfo[$key]['job_title'] = $value->custom_jobTitle;
        } else {
           $employeeinfo[$key]['job_title'] = 'None';
        }
      }
	  if(!empty($value->custom_jobfunction)){
        $employeeinfo[$key]['job_function'] = $value->custom_jobfunction;
      }
	  if(!empty($value->custom_applicationid)){
        $employeeinfo[$key]['application_id'] = $value->custom_applicationid;
      }
      if(!empty($value->custom_orgsegment)){
        $employeeinfo[$key]['company'] = $value->custom_orgsegment;
      }
      if(!empty($value->custom_suborgsegment)){
        $employeeinfo[$key]['sub_business'] = $value->custom_suborgsegment;
      }
      if(!empty($value->custom_company)){
        $employeeinfo[$key]['custom_company'] = $value->custom_company;
      }
      if(!empty($value->userType)){
        $employeeinfo[$key]['user_type'] = $value->userType;
	  }else {
		  $employeeinfo[$key]['user_type'] = 'Employee';
      }
      if(!empty($value->custom_enddate )){
        if(is_array($value->custom_enddate)) {
          foreach($value->custom_enddate as $val) {
            $value->custom_enddate = $val->value;
          }
        }
        $employeeinfo[$key]['end_date'] = date('m/d/Y',strtotime($value->custom_enddate));
      }
      if(!empty($value->phoneNumbers)){
        foreach($value->phoneNumbers as $phone){
          $employeeinfo[$key]['phone'][$phone->type] = $phone->value;
        }
      }
    }
  }
  return $employeeinfo;
}
/**
 * Implementing hook_theme().
 */
function idm_employees_theme() {
  $themes = array (
    'employees' => array (
      'template' => 'employees',
      'variables' => array (
        'vars' => array (
          ''
        )
      )
    )
  );
  return $themes;
}

/**
 * Callback for getting employees.
 */
function idm_employees_emplist($userType = 'all', $sortBy = '', $sortOrder = '') {
  global $user;
  $userid = empty($user->name) ? '' : $user->name;
  $employee_content = _idm_employee_get_emplist($userType, $sortBy, $sortOrder);
  $var['employee_count'] = isset($employee_content['employee_count']) ? $employee_content['employee_count'] : 0;
  $var['contractor_count'] = isset($employee_content['contractor_count']) ? $employee_content['contractor_count'] : 0;
  $var['functional_count'] = isset($employee_content['functional_count']) ? $employee_content['functional_count'] : 0;
  $var['total_count'] = isset($employee_content['total_count']) ? $employee_content['total_count'] : 0;
  $employees_content = array_slice($employee_content, 4);
  $var['employee'] = $employees_content;
  $var['filterby'] = $userType;
  $var['manager_lookup_field'] = idm_profile_get_manager_lookup_field($userid);
  $var['employee_search_field'] = idm_employees_get_employee_search_field($userid);
  return theme('employees', $var);
}

/**
 * Wrapper method for get the Employee details.
 *
 * @param String $userid,$userType
 */
function _idm_employee_get_emplist($userType,$sortBy,$sortOrder) {
  global $user;
  //$userid = '221013362';
  $userid = empty($user->name) ? '' : $user->name;
  $url = variable_get('rest_api_check_url').'/internal/users';
  if ($userType == 'all') {
    if ($sortBy == ''){
      $filter = rawurlencode('manager.managerId eq '.$userid);
    }else {
      $sort_filter = '&sortBy='.$sortBy.'&sortOrder='.$sortOrder;
      $filter = rawurlencode('manager.managerId eq '.$userid).$sort_filter;
    }
  } else {
    if ($sortBy == '') {
      $filter = rawurlencode('manager.managerId eq '.$userid.' and userType eq '.$userType);
    } else {
      $sort_filter = '&sortBy='.$sortBy.'&sortOrder='.$sortOrder;
      $filter = rawurlencode('manager.managerId eq '.$userid.' and userType eq '.$userType).$sort_filter;
    }
  }
  $url_get = $url . '/?filter='.$filter;
  $result = _idm_portal_get_api_data($url_get);
  $return = _idm_employee_format_employee_info(json_decode($result->data));
  return $return;
}

/**
 * Method to terminate the Employee.
 */
function idm_employees_terminate($userid) {
  $url = variable_get('rest_api_check_url').'/internal/users';
  if ($userType == '') {
  $filter = rawurlencode('manager.managerId eq '.$userid);
  } else {
  $filter = rawurlencode('manager.managerId eq '.$userid.' and userType eq '.$userType);
  }
  $url_get = $url . '/?filter='.$filter;
  $result = _idm_portal_get_api_data($url_get);
  $return = _idm_employee_format_emplist_info(json_decode($result->data));
  return $return;
}

/**
 * Method to download the Employee List.
 */
function idm_employees_download($userType) {
  $employee_list = _idm_employee_get_emplist($userType,'id','ascending');
  $employees = array_slice($employee_list, 4);
  $employee_array = array();
  foreach ($employees as $key => $value) {
  if($value['user_type']== 'Employee' || $value['user_type'] == "Contractor" || $value['user_type'] == "Functional") {
      $name = explode(" ",$value['name']);
      $employee_array[$key]['Firstname'] = !empty($name[0]) ? $name[0] : '';
      $employee_array[$key]['Lastname'] = !empty($name[1]) ? $name[1] : '' ;
      $employee_array[$key]['Email'] = !empty($value['email']['alternate']) ? $value['email']['alternate'] : '';
      $employee_array[$key]['Organization'] = !empty($value['company']) ? $value['company'] : '' ;
      $employee_array[$key]['Title'] = !empty($value['job_title']) ? $value['job_title'] : '';
      $employee_array[$key]['Business Phone Number'] = !empty($value['phone']['work']) ? $value['phone']['work'] : '';
      $employee_array[$key]['Address'] = '';
      $employee_array[$key]['City'] = '';
      $employee_array[$key]['State'] = '';
      $employee_array[$key]['EmployeeType'] = !empty($value['user_type']) ? $value['user_type'] : '';
    }
  }
  export_to_excel($employee_array, $userType);
}

/**
 * Method to export to excel.
 */
function export_to_excel ($export_to_excel, $fname) {
  $filename= $fname.'.xls';
  header("Content-Disposition: attachment; filename=\"$filename\"");
  header("Content-Type: application/vnd.ms-excel");
  $flag = false;
  foreach($export_to_excel as $row) {
    if(!$flag) {
      print implode("\t", array_keys($row)) . "\r\n";
      $flag = true;
    }
    print implode("\t", array_values($row)) . "\r\n";
  }
}